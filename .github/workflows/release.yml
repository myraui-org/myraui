name: Release

on:
  push:
    branches:
      - main

permissions:
  actions: write
  contents: write
  pages: write
  id-token: write

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install
        uses: ./.github/workflows/templates/install

      - name: Lint check
        run: pnpm exec nx run-many -t=lint --parallel --configuration=ci
  test:
    name: Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install
        uses: ./.github/workflows/templates/install

      - name: Test
        run: pnpm exec nx run-many --target=test --all --parallel --configuration=ci

      - name: Publish test report
        uses: paambaati/codeclimate-action@v5.0.0
        env:
          CC_TEST_REPORTER_ID: ${{ secrets.CODECLIMATE_REPO_TOKEN }}
        with:
          coverageCommand: pnpm run coverage-merge
          coverageLocations: |
            ${{ github.workspace }}/coverage/lcov.info:lcov
  build_storybook:
    name: Build Storybook
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install
        uses: ./.github/workflows/templates/install

      - name: Build
        run: pnpm build-storybook --configuration=ci
  release:
    name: Release
    runs-on: ubuntu-latest
    needs: [lint, test, build_storybook]
    steps:
      - uses: actions/create-github-app-token@v1
        id: app-token
        with:
          app-id: ${{ vars.MYRA_UI_RELEASE_APP_ID }}
          private-key: ${{ secrets.MYRA_UI_RELEASE_APP_SECRET }}

      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ steps.app-token.outputs.token }}

      - name: Setup Git
        run: |
          git config user.name myraui-release-app
          git config user.email 1011736+myraui-release-app[bot]@users.noreply.github.com

      - name: Install
        uses: ./.github/workflows/templates/install

      - name: Build
        run: pnpm run build

      - name: Release
        run: pnpm run release --dryRun=false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          NPM_CONFIG_PROVENANCE: true
